{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-dom","imported":["render"],"specifiers":[{"kind":"named","imported":"render","local":"render"}]},{"source":"react-router","imported":["Router","Route","IndexRoute","browserHistory"],"specifiers":[{"kind":"named","imported":"Router","local":"Router"},{"kind":"named","imported":"Route","local":"Route"},{"kind":"named","imported":"IndexRoute","local":"IndexRoute"},{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"../../ui/AppPage.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AppPage"}]},{"source":"../../ui/LoginPage.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"LoginPage"}]},{"source":"../../ui/SignUpPage.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SignUpPage"}]},{"source":"../../ui/NotFoundPage.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"NotFoundPage"}]},{"source":"../../ui/QuestionsListPage.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"QuestionsListPage"}]},{"source":"../../ui/QuestionPage.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"QuestionPage"}]}],"exports":{"exported":["renderRoutes"],"specifiers":[{"kind":"local","local":"renderRoutes","exported":"renderRoutes"}]}}},"options":{"filename":"/imports/startup/client/routes.jsx","filenameRelative":"/imports/startup/client/routes.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/startup/client/routes.jsx.map","sourceFileName":"/imports/startup/client/routes.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"routes"},"ignored":false,"code":"module.export({renderRoutes:function(){return renderRoutes}});var React;module.import('react',{\"default\":function(v){React=v}});var render;module.import('react-dom',{\"render\":function(v){render=v}});var Router,Route,IndexRoute,browserHistory;module.import('react-router',{\"Router\":function(v){Router=v},\"Route\":function(v){Route=v},\"IndexRoute\":function(v){IndexRoute=v},\"browserHistory\":function(v){browserHistory=v}});var AppPage;module.import('../../ui/AppPage.jsx',{\"default\":function(v){AppPage=v}});var LoginPage;module.import('../../ui/LoginPage.jsx',{\"default\":function(v){LoginPage=v}});var SignUpPage;module.import('../../ui/SignUpPage.jsx',{\"default\":function(v){SignUpPage=v}});var NotFoundPage;module.import('../../ui/NotFoundPage.jsx',{\"default\":function(v){NotFoundPage=v}});var QuestionsListPage;module.import('../../ui/QuestionsListPage.jsx',{\"default\":function(v){QuestionsListPage=v}});var QuestionPage;module.import('../../ui/QuestionPage.jsx',{\"default\":function(v){QuestionPage=v}});\n\n\n\n\n\n\n\n\n\n\nbrowserHistory.listen(function (location) {\n  console.log(\"Page: \" + location.pathname);\n});\n\nvar renderRoutes = function renderRoutes() {\n  return React.createElement(\n    Router,\n    { history: browserHistory },\n    React.createElement(\n      Route,\n      { path: '/', component: AppPage },\n      React.createElement(IndexRoute, { component: QuestionsListPage }),\n      React.createElement(Route, { path: 'login', component: LoginPage }),\n      React.createElement(Route, { path: 'signup', component: SignUpPage }),\n      React.createElement(Route, { path: ':questionId', component: QuestionPage })\n    ),\n    React.createElement(Route, { path: '*', component: NotFoundPage })\n  );\n};","ast":null,"map":{"version":3,"sources":["/imports/startup/client/routes.jsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,MAAT,EAAiB,KAAjB,EAAwB,UAAxB,EAAoC,cAApC,QAA0D,cAA1D;;AAEA,OAAO,OAAP,MAAoB,sBAApB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,UAAP,MAAuB,yBAAvB;AACA,OAAO,YAAP,MAAyB,2BAAzB;AACA,OAAO,iBAAP,MAA8B,gCAA9B;AACA,OAAO,YAAP,MAAyB,2BAAzB;;AAEA,eAAe,MAAf,CAAsB,UAAU,QAAV,EAAoB;AACxC,UAAQ,GAAR,CAAY,WAAW,SAAS,QAAhC;AACD,CAFD;;AAIA,OAAO,IAAM,eAAe,SAAf,YAAe;AAAA,SAC1B;AAAC,UAAD;AAAA,MAAQ,SAAS,cAAjB;AACE;AAAC,WAAD;AAAA,QAAO,MAAK,GAAZ,EAAgB,WAAW,OAA3B;AACE,0BAAC,UAAD,IAAY,WAAW,iBAAvB,GADF;AAEE,0BAAC,KAAD,IAAO,MAAK,OAAZ,EAAoB,WAAW,SAA/B,GAFF;AAGE,0BAAC,KAAD,IAAO,MAAK,QAAZ,EAAqB,WAAW,UAAhC,GAHF;AAIE,0BAAC,KAAD,IAAO,MAAK,aAAZ,EAA0B,WAAW,YAArC;AAJF,KADF;AAOE,wBAAC,KAAD,IAAO,MAAK,GAAZ,EAAgB,WAAW,YAA3B;AAPF,GAD0B;AAAA,CAArB","file":"/imports/startup/client/routes.jsx.map","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { Router, Route, IndexRoute, browserHistory } from 'react-router';\n\nimport AppPage from '../../ui/AppPage.jsx';\nimport LoginPage from '../../ui/LoginPage.jsx';\nimport SignUpPage from '../../ui/SignUpPage.jsx';\nimport NotFoundPage from '../../ui/NotFoundPage.jsx';\nimport QuestionsListPage from '../../ui/QuestionsListPage.jsx';\nimport QuestionPage from '../../ui/QuestionPage.jsx';\n\nbrowserHistory.listen(function (location) {\n  console.log(\"Page: \" + location.pathname);\n});\n\nexport const renderRoutes = () => (\n  <Router history={browserHistory}>\n    <Route path=\"/\" component={AppPage} >\n      <IndexRoute component={QuestionsListPage} />\n      <Route path=\"login\" component={LoginPage} />\n      <Route path=\"signup\" component={SignUpPage} />\n      <Route path=\":questionId\" component={QuestionPage} />\n    </Route>\n    <Route path=\"*\" component={NotFoundPage}/>\n  </Router>\n);\n"]},"hash":"55cc332977eafc75be99a065e3bdb85e77873aea"}
