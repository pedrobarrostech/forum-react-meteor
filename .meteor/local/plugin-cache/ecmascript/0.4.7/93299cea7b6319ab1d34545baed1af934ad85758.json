{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"react-router","imported":["Link","browserHistory"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"},{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"../api/questions.js","imported":["Questions"],"specifiers":[{"kind":"named","imported":"Questions","local":"Questions"}]},{"source":"./QuestionItem.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"QuestionItem"}]},{"source":"./QuestionForm.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"QuestionForm"}]},{"source":"./Loading.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loading"}]},{"source":"./Footer.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Footer"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/QuestionsListPage.jsx","filenameRelative":"/imports/ui/QuestionsListPage.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/QuestionsListPage.jsx.map","sourceFileName":"/imports/ui/QuestionsListPage.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"QuestionsListPage"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var Link,browserHistory;module.import('react-router',{\"Link\":function(v){Link=v},\"browserHistory\":function(v){browserHistory=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var Questions;module.import('../api/questions.js',{\"Questions\":function(v){Questions=v}});var QuestionItem;module.import('./QuestionItem.jsx',{\"default\":function(v){QuestionItem=v}});var QuestionForm;module.import('./QuestionForm.jsx',{\"default\":function(v){QuestionForm=v}});var Loading;module.import('./Loading.jsx',{\"default\":function(v){Loading=v}});var Footer;module.import('./Footer.jsx',{\"default\":function(v){Footer=v}});\n\n\n\n\n\n\n\n\n\n\n\n\nvar QuestionsList = function (_Component) {\n  _inherits(QuestionsList, _Component);\n\n  function QuestionsList() {\n    _classCallCheck(this, QuestionsList);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  QuestionsList.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (!this.props.user) {\n      browserHistory.push(\"/login\");\n    }\n  };\n\n  QuestionsList.prototype.componentDidMount = function componentDidMount() {\n    if (!this.props.user) {\n      browserHistory.push(\"/login\");\n    }\n  };\n\n  QuestionsList.prototype.handleLike = function handleLike(questionId) {\n    Meteor.call(\"questions.like\", questionId);\n  };\n\n  QuestionsList.prototype.handleSolve = function handleSolve(questionId) {\n    Meteor.call(\"questions.solve\", questionId);\n  };\n\n  QuestionsList.prototype.renderSolvedQuestions = function renderSolvedQuestions() {\n    var _this2 = this;\n\n    return this.props.solvedQuestions.map(function (question) {\n      return React.createElement(QuestionItem, { key: question._id, question: question, handleLike: _this2.handleLike, handleSolve: _this2.handleSolve });\n    });\n  };\n\n  QuestionsList.prototype.renderQuestions = function renderQuestions() {\n    var _this3 = this;\n\n    return this.props.openQuestions.map(function (question) {\n      return React.createElement(QuestionItem, { user: _this3.props.users.find(function (user) {\n          return user._id == question.userId;\n        }), key: question._id, question: question, handleLike: _this3.handleLike, handleSolve: _this3.handleSolve });\n    });\n  };\n\n  QuestionsList.prototype.renderSolvedQuestions = function renderSolvedQuestions() {\n    var _this4 = this;\n\n    return this.props.solvedQuestions.map(function (question) {\n      return React.createElement(QuestionItem, { user: _this4.props.users.find(function (user) {\n          return user._id == question.userId;\n        }), key: question._id, question: question, handleLike: _this4.handleLike, handleSolve: _this4.handleSolve });\n    });\n  };\n\n  QuestionsList.prototype.renderLoading = function renderLoading() {\n    return React.createElement(Loading, null);\n  };\n\n  QuestionsList.prototype.renderList = function renderList() {\n    if (this.props.loading) {\n      return this.renderLoading();\n    }\n    return React.createElement(\n      'div',\n      null,\n      React.createElement(\n        'h5',\n        null,\n        'Open Questions'\n      ),\n      React.createElement(\n        'table',\n        { className: 'centered' },\n        React.createElement(\n          'thead',\n          null,\n          React.createElement(\n            'tr',\n            null,\n            React.createElement(\n              'th',\n              { 'data-field': 'id' },\n              'Name'\n            ),\n            React.createElement(\n              'th',\n              { 'data-field': 'name' },\n              'Likes'\n            ),\n            React.createElement(\n              'th',\n              { 'data-field': 'price' },\n              'Solved?'\n            )\n          )\n        ),\n        React.createElement(\n          'tbody',\n          null,\n          this.renderQuestions()\n        )\n      ),\n      React.createElement(\n        'h5',\n        null,\n        'Closed Questions'\n      ),\n      React.createElement(\n        'table',\n        { className: 'centered' },\n        React.createElement(\n          'thead',\n          null,\n          React.createElement(\n            'tr',\n            null,\n            React.createElement(\n              'th',\n              { 'data-field': 'id' },\n              'Name'\n            ),\n            React.createElement(\n              'th',\n              { 'data-field': 'name' },\n              'Likes'\n            ),\n            React.createElement(\n              'th',\n              { 'data-field': 'price' },\n              'Solved?'\n            )\n          )\n        ),\n        React.createElement(\n          'tbody',\n          null,\n          this.renderSolvedQuestions()\n        )\n      )\n    );\n  };\n\n  QuestionsList.prototype.render = function render() {\n    return React.createElement(\n      'div',\n      null,\n      React.createElement(\n        'div',\n        { className: 'section no-pad-bot', id: 'index-banner' },\n        React.createElement(\n          'div',\n          { className: 'container' },\n          React.createElement(\n            'h1',\n            { className: 'header center orange-text' },\n            'Questions?'\n          ),\n          React.createElement(QuestionForm, { placeholderName: 'Add a question ...',\n            repository: 'questions.create', formName: 'new-question' }),\n          this.renderList(),\n          React.createElement('br', null),\n          React.createElement('br', null)\n        )\n      ),\n      React.createElement(Footer, null)\n    );\n  };\n\n  return QuestionsList;\n}(Component);\n/*\nQuestionsList.propTypes = {\n  solvedQuestions: PropTypes.array.isRequired,\n  openQuestions: PropTypes.array.isRequired\n\n};\n\n\nexport default class Container extends Component {\n  render(){\n    const questionsSubscriton = Meteor.subscribe(\"questions\");\n    data = {\n      questions: Questions.find({},  {sort: {likes: -1 }}).fetch(),\n      loading: !questionsSubscriton.ready()\n    }\n\n    return (\n      <QuestionsList questions={data.questions} loading={data.loading} />\n    )\n  }\n}\n*/\n\n\nmodule.export(\"default\",exports.default=(createContainer(function () {\n  var questionsSubscription = Meteor.subscribe(\"questions\");\n  return {\n    user: Meteor.user(),\n    openQuestions: Questions.find({ solvedAt: null }, { sort: { likes: -1 } }).fetch(),\n    solvedQuestions: Questions.find({ solvedAt: { $ne: null } }, { sort: { likes: -1 } }).fetch(),\n    users: Meteor.users.find().fetch(),\n    loading: !questionsSubscription.ready()\n  };\n}, QuestionsList)));","ast":null,"map":{"version":3,"sources":["/imports/ui/QuestionsListPage.jsx"],"names":[],"mappings":"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","file":"/imports/ui/QuestionsListPage.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link, browserHistory } from 'react-router';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Questions } from '../api/questions.js';\nimport QuestionItem from './QuestionItem.jsx';\nimport QuestionForm from './QuestionForm.jsx';\nimport Loading from './Loading.jsx';\nimport Footer from './Footer.jsx';\n\nclass QuestionsList extends Component {\n\n  componentDidUpdate() {\n    if (!this.props.user) {\n      browserHistory.push(\"/login\");\n    }\n  }\n  componentDidMount() {\n    if (!this.props.user) {\n      browserHistory.push(\"/login\");\n    }\n  }\n\n  handleLike(questionId) {\n    Meteor.call(\"questions.like\", questionId);\n  };\n\n  handleSolve(questionId) {\n    Meteor.call(\"questions.solve\", questionId);\n  };\n\n  renderSolvedQuestions() {\n    return this.props.solvedQuestions.map((question) => (\n      <QuestionItem key={question._id} question={question} handleLike={this.handleLike} handleSolve={this.handleSolve} />\n    ));\n  };\n\n  renderQuestions() {\n    return this.props.openQuestions.map((question) => (\n      <QuestionItem user={this.props.users.find((user) => (user._id == question.userId))} key={question._id} question={question} handleLike={this.handleLike} handleSolve={this.handleSolve} />\n    ));\n  }\n\n  renderSolvedQuestions() {\n    return this.props.solvedQuestions.map((question) => (\n      <QuestionItem user={this.props.users.find((user) => (user._id == question.userId))} key={question._id} question={question} handleLike={this.handleLike} handleSolve={this.handleSolve} />\n    ));\n  }\n\n  renderLoading() {\n    return (\n      <Loading />\n    )\n  }\n\n  renderList() {\n    if (this.props.loading) {\n      return this.renderLoading();\n    }\n    return (\n      <div>\n        <h5>Open Questions</h5>\n        <table className=\"centered\">\n          <thead>\n            <tr>\n                <th data-field=\"id\">Name</th>\n                <th data-field=\"name\">Likes</th>\n                <th data-field=\"price\">Solved?</th>\n            </tr>\n          </thead>\n          <tbody>\n          {this.renderQuestions()}\n          </tbody>\n        </table>\n\n        <h5>Closed Questions</h5>\n        <table className=\"centered\">\n          <thead>\n            <tr>\n                <th data-field=\"id\">Name</th>\n                <th data-field=\"name\">Likes</th>\n                <th data-field=\"price\">Solved?</th>\n            </tr>\n          </thead>\n          <tbody>\n          {this.renderSolvedQuestions()}\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"section no-pad-bot\" id=\"index-banner\">\n          <div className=\"container\">\n            <h1 className=\"header center orange-text\">Questions?</h1>\n            <QuestionForm placeholderName=\"Add a question ...\"\n              repository=\"questions.create\" formName=\"new-question\"/>\n           {this.renderList()}\n          <br/><br/>\n        </div>\n      </div>\n      <Footer />\n    </div>\n    );\n  }\n}\n/*\nQuestionsList.propTypes = {\n  solvedQuestions: PropTypes.array.isRequired,\n  openQuestions: PropTypes.array.isRequired\n\n};\n\n\nexport default class Container extends Component {\n  render(){\n    const questionsSubscriton = Meteor.subscribe(\"questions\");\n    data = {\n      questions: Questions.find({},  {sort: {likes: -1 }}).fetch(),\n      loading: !questionsSubscriton.ready()\n    }\n\n    return (\n      <QuestionsList questions={data.questions} loading={data.loading} />\n    )\n  }\n}\n*/\nexport default createContainer(\n  () => {\n    const questionsSubscription = Meteor.subscribe(\"questions\");\n    return {\n      user: Meteor.user(),\n      openQuestions: Questions.find({solvedAt: null}, {sort: {likes: -1}}).fetch(),\n      solvedQuestions: Questions.find({solvedAt: {$ne: null}}, {sort: {likes: -1}}).fetch(),\n      users: Meteor.users.find().fetch(),\n      loading: !questionsSubscription.ready()\n    };\n  },\n  QuestionsList);\n"]},"hash":"93299cea7b6319ab1d34545baed1af934ad85758"}
