{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"../api/questions.js","imported":["Questions"],"specifiers":[{"kind":"named","imported":"Questions","local":"Questions"}]}],"exports":{"exported":["CommentForm"],"specifiers":[{"kind":"local","local":"CommentForm","exported":"default"}]}}},"options":{"filename":"/imports/ui/components/CommentForm.jsx","filenameRelative":"/imports/ui/components/CommentForm.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/components/CommentForm.jsx.map","sourceFileName":"/imports/ui/components/CommentForm.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"CommentForm"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var Questions;module.import('../api/questions.js',{\"Questions\":function(v){Questions=v}});\n\n\n\n\n\n\n\nvar CommentForm = function (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm() {\n    _classCallCheck(this, CommentForm);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  CommentForm.prototype.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault();\n      var text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n      Meteor.call(\"questions.comment\", text);\n      ReactDOM.findDOMNode(this.refs.textInput).value = '';\n    }\n\n    return handleSubmit;\n  }();\n\n  CommentForm.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        'div',\n        { className: 'form-group' },\n        React.createElement(\n          'form',\n          { className: this.props.formName,\n            onSubmit: this.handleSubmit.bind(this) },\n          React.createElement('input', {\n            className: 'form-control',\n            type: 'text',\n            ref: 'textInput',\n            placeholder: this.props.placeholderName\n          })\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return CommentForm;\n}(Component);\n\nmodule.export(\"default\",exports.default=(CommentForm));","ast":null,"map":{"version":3,"sources":["/imports/ui/components/CommentForm.jsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,SAAS,SAAT,QAA0B,qBAA1B;;IAEqB,W;;;;;;;;;wBAEnB,Y;0BAAa,K,EAAO;AAClB,YAAM,cAAN;AACA,UAAM,OAAO,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,CAAgD,IAAhD,EAAb;AACA,aAAO,IAAP,CAAY,mBAAZ,EAAiC,IAAjC;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,GAAkD,EAAlD;AACD;;;;;wBAED,M;sBAAS;AACP,aACI;AAAA;AAAA,UAAK,WAAU,YAAf;AACE;AAAA;AAAA,YAAM,WAAW,KAAK,KAAL,CAAW,QAA5B;AACI,sBAAU,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CADd;AAEE;AACE,uBAAU,cADZ;AAEE,kBAAK,MAFP;AAGE,iBAAI,WAHN;AAIE,yBAAa,KAAK,KAAL,CAAW;AAJ1B;AAFF;AADF,OADJ;AAaD;;;;;;EAvBsC,S;;eAApB,W","file":"/imports/ui/components/CommentForm.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Questions } from '../api/questions.js';\n\nexport default class CommentForm extends Component {\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Meteor.call(\"questions.comment\", text);\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  render() {\n    return (\n        <div className=\"form-group\">\n          <form className={this.props.formName}\n              onSubmit={this.handleSubmit.bind(this)} >\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              ref=\"textInput\"\n              placeholder={this.props.placeholderName}\n            />\n          </form>\n        </div>\n    );\n  }\n}\n"]},"hash":"06f7107deabd5e82c57541e3b1a98f9ccf283c7b"}
